<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.java.tutorial.project.mapper.GenTableMapper">

    <resultMap type="com.java.tutorial.project.domain.GenTable" id="GenTableResult">
        <id     property="tableId"        column="table_id"          />
        <handlerResult property="tableName"      column="table_name"        />
        <handlerResult property="tableComment"   column="table_comment"     />
        <handlerResult property="subTableName"   column="sub_table_name"    />
        <handlerResult property="subTableFkName" column="sub_table_fk_name" />
        <handlerResult property="className"      column="class_name"        />
        <handlerResult property="tplCategory"    column="tpl_category"      />
        <handlerResult property="packageName"    column="package_name"      />
        <handlerResult property="moduleName"     column="module_name"       />
        <handlerResult property="businessName"   column="business_name"     />
        <handlerResult property="functionName"   column="function_name"     />
        <handlerResult property="functionAuthor" column="function_author"   />
        <handlerResult property="genType"        column="gen_type"          />
        <handlerResult property="genPath"        column="gen_path"          />
        <handlerResult property="options"        column="options"           />
        <handlerResult property="createBy"       column="create_by"         />
        <handlerResult property="createTime"     column="create_time"       />
        <handlerResult property="updateBy"       column="update_by"         />
        <handlerResult property="updateTime"     column="update_time"       />
        <handlerResult property="remark"         column="remark"            />
        <collection  property="columns"  javaType="java.util.List"  resultMap="GenTableColumnResult" />
    </resultMap>

    <resultMap type="com.java.tutorial.project.domain.GenTableColumn" id="GenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <handlerResult property="tableId"        column="table_id"       />
        <handlerResult property="columnName"     column="column_name"    />
        <handlerResult property="columnComment"  column="column_comment" />
        <handlerResult property="columnType"     column="column_type"    />
        <handlerResult property="javaType"       column="java_type"      />
        <handlerResult property="javaField"      column="java_field"     />
        <handlerResult property="isPk"           column="is_pk"          />
        <handlerResult property="isIncrement"    column="is_increment"   />
        <handlerResult property="isRequired"     column="is_required"    />
        <handlerResult property="isInsert"       column="is_insert"      />
        <handlerResult property="isEdit"         column="is_edit"        />
        <handlerResult property="isList"         column="is_list"        />
        <handlerResult property="isQuery"        column="is_query"       />
        <handlerResult property="queryType"      column="query_type"     />
        <handlerResult property="htmlType"       column="html_type"      />
        <handlerResult property="dictType"       column="dict_type"      />
        <handlerResult property="sort"           column="sort"           />
        <handlerResult property="createBy"       column="create_by"      />
        <handlerResult property="createTime"     column="create_time"    />
        <handlerResult property="updateBy"       column="update_by"      />
        <handlerResult property="updateTime"     column="update_time"    />
    </resultMap>

    <sql id="selectGenTableVo">
        select table_id, table_name, table_comment, sub_table_name, sub_table_fk_name, class_name, tpl_category, package_name, module_name, business_name, function_name, function_author, gen_type, gen_path, options, create_by, create_time, update_by, update_time, remark from gen_table
    </sql>

    <select id="selectDbTableList" parameterType="com.java.tutorial.project.domain.GenTable" resultMap="GenTableResult">
        <if test="@com.meta.common.orm.helper.DataBaseHelper@isMySql()">
            select table_name, table_comment, create_time, update_time
            from information_schema.tables
            where table_schema = (select database())
            AND table_name NOT LIKE 'pj_%' AND table_name NOT LIKE 'gen_%'
            AND table_name NOT IN (select table_name from gen_table)
            <if test="tableName != null and tableName != ''">
                AND lower(table_name) like lower(concat('%', #{tableName}, '%'))
            </if>
            <if test="tableComment != null and tableComment != ''">
                AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))
            </if>
            order by create_time desc
        </if>
        <if test="@com.meta.common.orm.helper.DataBaseHelper@isPostgreSql()">
            select table_name, table_comment, create_time, update_time
            from (
            SELECT c.relname AS table_name,
            obj_description(c.oid) AS table_comment,
            CURRENT_TIMESTAMP AS create_time,
            CURRENT_TIMESTAMP AS update_time
            FROM pg_class c
            LEFT JOIN pg_namespace n ON n.oid = c.relnamespace
            WHERE (c.relkind = ANY (ARRAY ['r'::"char", 'p'::"char"]))
            AND c.relname != 'spatial_%'::text
            AND n.nspname = 'public'::name
            AND n.nspname <![CDATA[ <> ]]> ''::name
            ) list_table
            where table_name NOT LIKE 'pj_%' AND table_name NOT LIKE 'gen_%'
            AND table_name NOT IN (select table_name from gen_table)
            <if test="tableName != null and tableName != ''">
                AND lower(table_name) like lower(concat('%', #{tableName}, '%'))
            </if>
            <if test="tableComment != null and tableComment != ''">
                AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))
            </if>
            order by create_time desc
        </if>

    </select>

    <select id="selectDbTableListByNames" resultMap="GenTableResult">
        <if test="@com.meta.common.orm.helper.DataBaseHelper@isMySql()">
            select table_name, table_comment, create_time, update_time from information_schema.tables
            where table_name NOT LIKE 'pj_%' and table_name NOT LIKE 'gen_%' and table_schema = (select database())
            and table_name in
            <foreach collection="array" item="name" open="(" separator="," close=")">
                #{name}
            </foreach>
        </if>
        <if test="@com.meta.common.orm.helper.DataBaseHelper@isPostgreSql()">
            select table_name, table_comment, create_time, update_time
            from (
            SELECT c.relname AS table_name,
            obj_description(c.oid) AS table_comment,
            CURRENT_TIMESTAMP AS create_time,
            CURRENT_TIMESTAMP AS update_time
            FROM pg_class c
            LEFT JOIN pg_namespace n ON n.oid = c.relnamespace
            WHERE (c.relkind = ANY (ARRAY ['r'::"char", 'p'::"char"]))
            AND c.relname != 'spatial_%'::text
            AND n.nspname = 'public'::name
            AND n.nspname <![CDATA[ <> ]]> ''::name
            ) list_table
            where table_name NOT LIKE 'pj_%' and table_name NOT LIKE 'gen_%'
            and table_name in
            <foreach collection="array" item="name" open="(" separator="," close=")">
                #{name}
            </foreach>
        </if>
    </select>

    <select id="selectTableByName" parameterType="String" resultMap="GenTableResult">
        select table_name, table_comment, create_time, update_time from information_schema.tables
        where table_comment <![CDATA[ <> ]]> '' and table_schema = (select database())
          and table_name = #{tableName}
    </select>

    <select id="selectGenTableByName" parameterType="String" resultMap="GenTableResult">
        SELECT t.table_id,
               t.table_name,
               t.table_comment,
               t.sub_table_name,
               t.sub_table_fk_name,
               t.class_name,
               t.tpl_category,
               t.package_name,
               t.module_name,
               t.business_name,
               t.function_name,
               t.function_author,
               t.gen_type,
               t.gen_path,
               t.options,
               t.remark,
               c.column_id,
               c.column_name,
               c.column_comment,
               c.column_type,
               c.java_type,
               c.java_field,
               c.is_pk,
               c.is_increment,
               c.is_required,
               c.is_insert,
               c.is_edit,
               c.is_list,
               c.is_query,
               c.query_type,
               c.html_type,
               c.dict_type,
               c.sort
        FROM gen_table t
                 LEFT JOIN gen_table_column c ON t.table_id = c.table_id
        where t.table_name = #{tableName}
        order by c.sort
    </select>

</mapper>
